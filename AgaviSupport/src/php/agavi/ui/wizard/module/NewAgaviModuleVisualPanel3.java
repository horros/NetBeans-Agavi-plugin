/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2010 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2009 Sun Microsystems, Inc.
 */

package php.agavi.ui.wizard.module;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 * Visual panel asking for the views associated with the actions to create
 * 
 * @author Markus Lervik
 */
public final class NewAgaviModuleVisualPanel3 extends JPanel {

    private final GroupLayout layout;
    NewAgaviModuleWizardPanel3 documentListener;

    /** Creates new form NewAgaviModuleVisualPanel3 */
    public NewAgaviModuleVisualPanel3() {
        layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setAutoCreateGaps(true);
        layout.setAutoCreateContainerGaps(true);        
    }

    public ArrayList<Map<String, JTextField>> addActions(String[] actions) {
        ArrayList<Map<String, JTextField>> viewList = new ArrayList<Map<String, JTextField>>();
        
        GroupLayout.SequentialGroup hGroup = layout.createSequentialGroup();
        GroupLayout.SequentialGroup vGroup = layout.createSequentialGroup();
        
        GroupLayout.ParallelGroup labels1 = layout.createParallelGroup();
        GroupLayout.ParallelGroup fields1 = layout.createParallelGroup();
        JLabel title = new JLabel("Space-separated list of views to create:");
        vGroup.addGroup(layout.createBaselineGroup(true, true).addComponent(title));
        for (String action : actions) {
            JLabel l = new JLabel("Views for action " + action + ": ");
            JTextField f = new JTextField(20);
            f.getDocument().addDocumentListener(documentListener);
            HashMap<String, JTextField> m = new HashMap<String, JTextField>();
            m.put(action, f);
            viewList.add(m);
            labels1.addComponent(title);
            labels1.addComponent(l);
            fields1.addComponent(f);
            vGroup.addGroup(layout.createParallelGroup(Alignment.BASELINE).
                    addComponent(l).addComponent(f));
            
        }
        
        hGroup.addGroup(labels1);
        hGroup.addGroup(fields1);
        layout.setHorizontalGroup(hGroup);
        layout.setVerticalGroup(vGroup);
        return viewList;
    }

    @Override
    public String getName() {
        return "Views for actions";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 322, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
